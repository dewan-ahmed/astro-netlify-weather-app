---
import Layout from '../components/Layout.astro';
---

<Layout title="Super Simple Astro Weather App">
  <main>
    <div class="container">
      <h1>Super Simple Astro Weather App</h1>
      <div class="buttons">
        <button onclick={() => getCurrentWeather()}>Get Current Weather</button>
        <button onclick={() => getHistoricWeather()}>Get Historic Weather</button>
      </div>
      <div class="input-container">
        <input type="text" placeholder="Enter City Name" bind:value={cityName} />
        <input type="date" bind:value={startDate} />
        <input type="date" bind:value={endDate} />
      </div>
      <div class="display-box">
        <p>{weatherData}</p>
      </div>
    </div>
  </main>
</Layout>

<style>
  .container {
    max-width: 600px;
    margin: 0 auto;
    padding: 20px;
  }

  .buttons {
    display: flex;
    justify-content: center;
    margin-bottom: 20px;
  }

  .buttons button {
    margin: 0 10px;
    padding: 10px 20px;
  }

  .input-container {
    display: flex;
    align-items: center;
    margin-bottom: 20px;
  }

  .input-container input {
    margin-right: 10px;
    padding: 5px 10px;
  }

  .display-box {
    border: 1px solid #ccc;
    padding: 10px;
  }
</style>

<script>
  let cityName = '';
  let startDate = '';
  let endDate = '';
  let weatherData = '';

  async function getCurrentWeather() {
    try {
      const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid={API key}`);
      const data = await response.json();
      weatherData = JSON.stringify(data);
    } catch (error) {
      weatherData = `Error: ${error.message}`;
    }
  }

  async function getHistoricWeather() {
    try {
      // Make API call to your Java/Spring backend using the cityName, startDate, and endDate variables
      // Update the weatherData variable with the response from the backend API
    } catch (error) {
      weatherData = `Error: ${error.message}`;
    }
  }
</script>
