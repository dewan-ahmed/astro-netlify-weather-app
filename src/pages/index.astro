---
import { reactive, onMount } from "astro";
import Layout from '../components/Layout.astro';
---

<Layout title="Super Simple Astro Weather App">
  <main>
    <div class="container">
      <h1>Super Simple Astro Weather App</h1>
      <div class="buttons">
        <button onclick={getCurrentWeather}>Get Current Weather</button>
        <button onclick={getHistoricWeather}>Get Historic Weather</button>
      </div>
      <div class="input-box">
        <label for="cityName">City Name:</label>
        <input type="text" id="cityName" bind:value={state.cityName} />
      </div>
      <div class="input-box">
        <label for="startDate">Start Date:</label>
        <input type="date" id="startDate" bind:value={state.startDate} />
      </div>
      <div class="input-box">
        <label for="endDate">End Date:</label>
        <input type="date" id="endDate" bind:value={state.endDate} />
      </div>
      <div class="display-box">
        <p>{state.weatherData}</p>
      </div>
    </div>
  </main>
</Layout>

<script>
  const { reactive, onMount } = Astro;
  const state = reactive({
    cityName: "",
    startDate: "",
    endDate: "",
    weatherData: "",
  });

  async function getCurrentWeather() {
    try {
      const response = await fetch(
        `https://api.openweathermap.org/data/2.5/weather?q=${state.cityName}&appid={API key}`
      );
      const data = await response.json();
      state.weatherData = JSON.stringify(data);
    } catch (error) {
      state.weatherData = `Error: ${error.message}`;
    }
  }

  async function getHistoricWeather() {
    // Implement the logic to fetch historic weather data
  }

  onMount(() => {
    // Code to run when the component is mounted
  });
</script>

<style>
  /* Add your custom styles here */
  /* ... */
</style>
